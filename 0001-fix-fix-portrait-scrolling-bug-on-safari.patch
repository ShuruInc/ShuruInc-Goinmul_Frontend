From b5baaf4fb2b4ca18628cd3e21d1b29b753454e3d Mon Sep 17 00:00:00 2001
From: Yeonjin Shin <yeonjin@yeonjin.name>
Date: Wed, 20 Mar 2024 15:23:01 +0900
Subject: [PATCH] fix: fix portrait scrolling bug on safari

---
 .../horizontal_drag_to_scroll_on_desktop.ts   | 38 +++++++++++++++----
 1 file changed, 30 insertions(+), 8 deletions(-)

diff --git a/Main/src/horizontal_drag_to_scroll_on_desktop.ts b/Main/src/horizontal_drag_to_scroll_on_desktop.ts
index 21b9f9d..b133ea0 100644
--- a/Main/src/horizontal_drag_to_scroll_on_desktop.ts
+++ b/Main/src/horizontal_drag_to_scroll_on_desktop.ts
@@ -8,13 +8,22 @@ export default function setHorizontalDragScrollOnDesktop(element: HTMLElement) {
         preventClick = false, // 의도치 않게 클릭이 되는 버그 방지용
         lastClientX: number | null = null;
 
-    element.addEventListener("mousedown", (evt) => {
+    const getClientX = (evt: MouseEvent | TouchEvent) => {
+        if ((evt as TouchEvent).touches) {
+            return (evt as TouchEvent).touches[0].clientX;
+        } else if ((evt as MouseEvent).clientX) {
+            return (evt as MouseEvent).clientX;
+        }
+        throw new Error('?'); // This error never fire
+    }
+
+    const ondown = (evt: MouseEvent | TouchEvent) => {
         dragStarted = true;
-        lastClientX = evt.clientX;
-    });
-    window.addEventListener("mousemove", (evt) => {
+        lastClientX = getClientX(evt);
+    };
+    const onmove = (evt: MouseEvent | TouchEvent) => {
         evt.preventDefault();
-        const newClientX = evt.clientX;
+        const newClientX = getClientX(evt);
 
         if (!dragStarted) return;
         else if (lastClientX === null) return (lastClientX = newClientX);
@@ -25,13 +34,26 @@ export default function setHorizontalDragScrollOnDesktop(element: HTMLElement) {
         lastClientX = newClientX;
         dragged = true;
         preventClick = true;
-    });
-    window.addEventListener("mouseup", (evt) => {
+    };
+    const onup = (evt: Event) => {
         if (dragged) evt.preventDefault();
         else preventClick = false;
         dragStarted = false;
         dragged = false;
-    });
+    };
+
+    document.addEventListener('mousedown', ondown);
+    document.addEventListener('mouseup', onup);
+    document.addEventListener('mousemove', onmove);
+
+    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
+    if (isSafari) {
+        document.addEventListener('touchstart', ondown);
+        document.addEventListener('touchmove', onmove);
+        document.addEventListener('touchcancel', onup);
+        document.addEventListener('touchend', onup);
+    }
+
     element.addEventListener("click", (evt) => {
         if (preventClick) {
             evt.preventDefault();
-- 
2.44.0

